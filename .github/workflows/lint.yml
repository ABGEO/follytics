name: Lint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure main branch exists
        if: github.ref != 'refs/heads/main'
        run: |
          set -euo pipefail

          git rev-parse --verify main \
            || git remote set-branches origin main \
            && git fetch --depth 1 origin main \
            && git branch main origin/main

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.7

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Setup GoLang
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.work"
          cache-dependency-path: "apps/api/go.sum"

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          args: "--help"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Linters
        run: |
          set -euo pipefail

          NX_BASE="HEAD^1"
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
            NX_BASE=main
          fi

          npx nx affected -t lint --base="$NX_BASE"


  lint-migrations:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - app: "api"
            migrations: "file://apps/api/db/migrations"
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Atlas
        uses: ariga/setup-atlas@v0
        with:
          cloud-token: ${{ secrets.ATLAS_TOKEN }}

      - name: Run Linters
        uses: ariga/atlas-action/migrate/lint@v1
        with:
          dir: ${{ matrix.migrations }}
          dir-name: "follytics-${{ matrix.app }}"
          dev-url: "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable"
